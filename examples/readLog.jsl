/**
 * @file Read log
 * @author Milos Petrasinovic <mpetrasinovic@pr-dc.com>
 * PR-DC, Republic of Serbia
 * info@pr-dc.com
 * @version 0.0.1
 */
close('all'); clear; clc;
disp(' --- ' + jsl_file_name + ' ---');

// Variables
var N_data = 5;

// Include classes
const { PRDC_PACKET } = require('Z:/_PRDC/PROGRAMI/_Electron_lib/PRDC_PACKET/PRDC_PACKET');
const { PRDC_SCBP_CODEC } = require('Z:/_PRDC/PROGRAMI/_Electron_lib/PRDC_SCBP_CODEC/PRDC_SCBP_CODEC');

// Choose log file
var options = {
  title: 'Choose LOG file',
  buttonLabel : 'Choose file',
  properties: ['multiSelections'],
  filters :[
    {name: 'log', extensions: ['log', 'txt']},
    {name: 'All Files', extensions: ['*']}
  ]
};

// Read data
tic;
var P = new PRDC_PACKET();
var CODEC = new PRDC_SCBP_CODEC();

packet_struct = [['DoubleLE', 'P', N_data]];
P.makePacket(packet_struct);
var inFun = P.getInputCast();
var N_in = P.bytes; // length of input packet payload
CODEC.begin();

tic;
var data = [];
var files = chooseFile(options);
if(!Array.isArray(files)) {
  files = [files];
}
  
tic;
for(var i = 0; i < files.length; i++) {
  // Convert files
  var file = files[i];
  disp(' Converting ' + file + ' to json (' + (i+1) + '/' + 
    files.length + ').');
  var data_in = readFile(file);
  for(var j = 0; j < data_in.length; j++) {
    CODEC.bufferInData([data_in[j]]);
  }
  data = [];
  while(CODEC.availableData()) {
    var [data_in_temp, flag_in] = CODEC.readPacket(N_in);
    if(flag_in) {
      var data_in_save = inFun(data_in_temp);
      data.push(data_in_save);
    }
  }

  // Save json data
  save(changeExtension(file, 'json'), 'data');
}

// End of program
disp(' The program was executed successfully... ');
disp(' Execution time: ' + num2str(toc(), 2) + ' seconds');
disp(' -------------------- ');